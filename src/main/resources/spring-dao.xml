<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       https://www.springframework.org/schema/context/spring-context.xsd">


    <!-- 配置整合mybatis -->

    <!--    1.1 不采用连接池 -->
<!--    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">-->
<!--        <property name="driverClassName" value="com.mysql.cj.jdbc.Driver"/>-->
<!--        <property name="url"-->
<!--                  value="jdbc:mysql://localhost:3306/sss?useSSL=true&amp;useUnicode=true&amp;characterEncoding=utf8&amp;serverTimezone=Asia/Shanghai"/>-->
<!--        <property name="username" value="root"/>-->
<!--        <property name="password" value="aliketh.my"/>-->
<!--    </bean>-->

    <!--    1.2 关联数据库配置文件 -->

    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath*:database.properties</value>
            </list>
        </property>
<!--        <property name="ignoreUnresolvablePlaceholders" value="true" />-->
    </bean>
    <context:property-placeholder location="classpath:database.properties"/>
    <!--         关联数据库配置文件的连接池属性配置 -->

    <!--    1.3 数据库连接池 -->
    <!--数据库连接池
        druid https://github.com/alibaba/druid
        dbcp 半自动化操作 不能自动连接 http://commons.apache.org/proper/commons-dbcp/
        c3p0 自动化操作（自动的加载配置文件 并且设置到对象里面）https://www.mchange.com/projects/c3p0/
    -->

        <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">

            <property name="driverClass" value="${jdbc.driver}"/>
            <property name="jdbcUrl" value="${jdbc.url}"/>
            <property name="user" value="${jdbc.username}"/>
            <property name="password" value="${jdbc.password}"/>

            <!-- c3p0连接池的私有属性 -->
            <property name="maxPoolSize" value="30"/>
            <property name="minPoolSize" value="10"/>
            <!-- 关闭连接后不自动commit -->
            <property name="autoCommitOnClose" value="false"/>
            <!-- 获取连接超时时间 -->
            <property name="checkoutTimeout" value="10000"/>
            <!-- 当获取连接失败重试次数 -->
            <property name="acquireRetryAttempts" value="2"/>
        </bean>

    <!-- 2.配置SqlSessionFactory对象 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 注入数据库连接池 -->
        <property name="dataSource" ref="dataSource"/>
        <!-- 配置MyBaties全局配置文件:mybatis-config.xml -->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!-- **mapper接口文件和**mapper.xml在同一包下不用配置这项 -->
        <!--映射xml文件，mapper是本人创建的文件夹，根据自己需求改动-->
        <property name="mapperLocations" value="classpath:xhmy/cloud/dao/mapper/*.xml"/>

        <!--        https://www.cnblogs.com/crazy-lc/p/12288473.html-->
        <!--        https://blog.csdn.net/qq_41379337/article/details/94453647-->
        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageInterceptor">
                    <property name="properties">
                        <props>
                            <prop key="helperDialect">mysql</prop>
                            <prop key="resonable">true</prop>
                        </props>
                    </property>
                </bean>
            </array>
        </property>
    </bean>

    <!-- 3.配置扫描Dao接口包，动态实现Dao接口注入到spring容器中 -->
    <!--解释 ：https://www.cnblogs.com/jpfss/p/7799806.html-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 注入sqlSessionFactory -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!-- 给出需要扫描Dao接口包 -->
        <property name="basePackage" value="xhmy.cloud.dao"/>
    </bean>

</beans>